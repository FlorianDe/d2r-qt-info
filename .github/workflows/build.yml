name: CI Build

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]

jobs:
  build-macos-arm:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Qt and other build dependencies
        run: |
          brew install qt@6 cmake

      - name: Build the project
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_PREFIX_PATH=$(brew --prefix qt) -DCMAKE_BUILD_TYPE=Release
          cmake --build .

      - name: Archive build artifacts
        run: |
          cp -R build/D2R-Qt-Info.app artifacts/

      - name: Publish Release Artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag: ${{ github.ref }}
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install qt
        run: |
          pip install yaqti &&
          python -m yaqti install --version 6.2.0 --platform desktop --os windows --set-envs

      - name: Install cmake
        run: |
          mkdir cmake && cd cmake &&
          Invoke-WebRequest -Uri https://github.com/Kitware/CMake/releases/download/v3.21.1/cmake-3.21.1-windows-x86_64.msi -OutFile cmake-3.21.1-windows-x86_64.msi &&
          ./cmake-3.21.1-windows-x86_64.msi --skip-license

      - name: Build with CMake
        run: |
          echo "CMAKE_PREFIX_PATH=$Qt6_DIR"
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$Qt6_DIR
          cmake --build .

      - name: Publish Release Artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag: ${{ github.ref }}
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
