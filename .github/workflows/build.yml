name: CI Build

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]

jobs:
  build-macos-arm:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Qt and other build dependencies
        run: |
          brew install qt@6 cmake

      - name: Build the project
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_PREFIX_PATH=$(brew --prefix qt) -DCMAKE_BUILD_TYPE=Release
          cmake --build .

      - name: Archive build artifacts
        run: |
          cp -R build/D2R-Qt-Info.app artifacts/

      - name: Publish Release Artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag: ${{ github.ref }}
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    runs-on: windows-latest


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ninja
        run: |
          choco install ninja

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.7.2'

      - uses: ilammy/msvc-dev-cmd@v1 # This action essentially calls vcvarsall.bat for the latest VS in the runner for x64

      - name: Build with CMake
        run: |
          cmake -S . -B build -G "Ninja Multi-Config" && cmake --build build --config Release
#          echo "CMAKE_PREFIX_PATH=$Qt6_DIR"
#          mkdir build
#          cd build
#          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$Qt6_DIR
#          cmake --build .

      - name: Publish Release Artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag: ${{ github.ref }}
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
